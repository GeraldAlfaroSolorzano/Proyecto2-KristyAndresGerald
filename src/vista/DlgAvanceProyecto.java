package vista;

import datos.AlmacenamientoColab;
import datos.AlmacenamientoProyectos;
import datos.AlmacenamientoTareas;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logica.EstadoTarea;
import logica.Proyectos;
import logica.TareasDeProyecto;

/**
 * Dialogo de gestion de proyectos donde se logra ver el avance de las proyectos
 * por medio un progressbar que muesta inicialmente el promedio de todas la tareas
 * que se estan haciendo
 *
 * @author Andres, Gerald, Kristy
 */
public class DlgAvanceProyecto extends javax.swing.JDialog {

    protected AlmacenamientoTareas listaTareas;
    protected AlmacenamientoColab listaColab;
    protected AlmacenamientoProyectos listaProyectos;

    /**
     * Constructor basico
     * @param parent ventana padre
     * @param modal modal
     */
    public DlgAvanceProyecto(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        configurarBarra();
    }

    /**
     * Constructor con dependencias
     * @param parent ventana padre
     * @param modal modal
     * @param listaTareas fuente de tareas
     * @param listaColab fuente de colaboradores
     * @param listaProyectos fuente de proyectos
     */
    public DlgAvanceProyecto(java.awt.Frame parent, boolean modal,
            AlmacenamientoTareas listaTareas,
            AlmacenamientoColab listaColab,
            AlmacenamientoProyectos listaProyectos) {
        super(parent, modal);
        initComponents();
        this.listaTareas = listaTareas;
        this.listaColab = listaColab;
        this.listaProyectos = listaProyectos;
        configurarBarra();
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProyectos = new javax.swing.JTable();
        lblBuscar = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        barAvance = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        lblCant = new javax.swing.JLabel();
        txtCant = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblProyectos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblProyectos);

        lblBuscar.setText("Buscar");

        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });

        jLabel1.setText("Progresion de Avance");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lblBuscar)
                .addGap(18, 18, 18)
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(barAvance, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(227, 227, 227))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBuscar)
                            .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(barAvance, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblCant.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCant.setText("Cantidad de registros:");

        txtCant.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCant)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 746, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCant)
                    .addComponent(txtCant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Se ejecuta al activar la ventana
     *
     * @param evt evento de activacion de ventana
     */
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        muestraTabla();
    }//GEN-LAST:event_formWindowActivated

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        muestraTabla();
    }//GEN-LAST:event_txtBuscarActionPerformed

    /**
     * Configura la barra de progreso con limites y aspecto inicial
     */
    private void configurarBarra() {
        barAvance.setMinimum(0);
        barAvance.setMaximum(100);
        barAvance.setValue(0);
        barAvance.setStringPainted(true);
        barAvance.setString("0 %");
    }

    /**
     * Actualiza el valor y el texto de la barra de progreso del proyecto el
     * valor se limita al rango de cero a cien
     * @param porcentaje porcentaje de avance propuesto
     */
    private void actualizarBarraProyecto(int porcentaje) {
        int p = porcentaje;
        if (p < 0) {
            p = 0;
        } else if (p > 100) {
            p = 100;
        }
        barAvance.setValue(p);
        barAvance.setString(p + " %");
    }

    /**
     * Mapea el % de avance a un estado escalonado usando EstadoTarea.
     */
    private String estadoDesdePorcentaje(int avance) {
        if (avance <= 0) {
            return EstadoTarea.CREADA.name();
        } else if (avance <= 25) {
            return EstadoTarea.INICIADA.name();
        } else if (avance <= 50) {
            return EstadoTarea.EN_EJECUCION.name();
        } else if (avance < 100) {
            return EstadoTarea.REVISION.name();
        } else {
            return EstadoTarea.FINALIZADA.name();
        }
    }
    
    /**
     * Construye el modelo de la tabla aplicando filtros de proyecto colaborador
     * estado y texto calcula el promedio de avance y lo refleja en la barra
     * Cuando las listas no estan listas muestra una tabla vacia
     */
    private void muestraTabla() {
        String[] columnTitles = {
            "ID", "Nombre", "Inicio", "Fin", "Duración", "Estado", "Avance %"
        };

        DefaultTableModel tableModel = new DefaultTableModel(null, columnTitles);

        if (listaProyectos == null || listaTareas == null) {
            tblProyectos.setModel(tableModel);
            txtCant.setText("0");
            actualizarBarraProyecto(0);
            JOptionPane.showMessageDialog(this, "Listas no inicializadas");
            return;
        }

        String textoFiltro = txtBuscar.getText();
        if (textoFiltro == null) {
            textoFiltro = "";
        }
        textoFiltro = textoFiltro.toLowerCase();

        int sumaAvances = 0;
        int contFiltrados = 0;
        Integer avanceUnico = null;

        for (Proyectos p : listaProyectos.mostrar()) {
            if (p == null) {
                continue;
            }

            // Filtra por nombre de proyecto (sin operador ternario)
            String nombre = p.getNomProyecto();
            String nombreLower = "";
            if (nombre != null) {
                nombreLower = nombre.toLowerCase();
            }
            if (!nombreLower.contains(textoFiltro)) {
                continue;
            }

            // Calcula avance del proyecto desde sus tareas
            java.util.ArrayList<TareasDeProyecto> tareas = listaTareas.listarPorProyecto(p.getIdProyecto());
            int avance = p.calcAvance(tareas);
            if (avance < 0) {
                avance = 0;
            } else if (avance > 100) {
                avance = 100;
            }

            String estado = estadoDesdePorcentaje(avance);

            Object[] fila = new Object[]{
                p.getIdProyecto(),
                p.getNomProyecto(),
                p.getFechInicio(),
                p.getFechFin(),
                p.getDuracionDias(),
                estado,
                avance
            };
            tableModel.addRow(fila);

            sumaAvances += avance;
            contFiltrados++;
            avanceUnico = avance;
        }

        tblProyectos.setModel(tableModel);
        txtCant.setText(Integer.toString(tableModel.getRowCount()));

        // Actualiza barra
        if (contFiltrados == 1 && avanceUnico != null) {
            actualizarBarraProyecto(avanceUnico);
        } else if (contFiltrados > 1) {
            int promedio = Math.round((float) sumaAvances / (float) contFiltrados);
            actualizarBarraProyecto(promedio);
        } else {
            actualizarBarraProyecto(0);
        }
    }

    /**
     * Metodo principal que inicia el dialogo de gestion de colaboradores
     *
     * @param args argumentos de linea de comandos
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgAvanceProyecto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgAvanceProyecto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgAvanceProyecto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgAvanceProyecto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgAvanceProyecto dialog = new DlgAvanceProyecto(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barAvance;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBuscar;
    private javax.swing.JLabel lblCant;
    private javax.swing.JTable tblProyectos;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCant;
    // End of variables declaration//GEN-END:variables
}
